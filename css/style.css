/*
	Create CSS custom properties from color map.

	EXAMPLE:
	$cl: (
		blue-10: #1D253B,
	);
	@include get-cls($cl);

	RESULT:
	--blue-10: 29, 37, 59;
	--cl-blue-10: rgb(var(--blue-10));

	INFO: One '@each' expression were split into two to achieve
	more readability of custom properties in a dev tools.
*/
/*
	Create RGBA custom property from given color.

	EXAMPLE:
	$ca-blue-10 {
		10: .5,
		20: .3,
		30: .1,
	}
	@include get-alphas($cl, 'blue-10', $ca-blue-10)

	RESULT:
	--ca-blue-10-10: rgba(var(--blue-10), .5)
	--ca-blue-10-20: rgba(var(--blue-10), .3)
	--ca-blue-10-30: rgba(var(--blue-10), .1)
*/
:root {
  --black: 0, 0, 0;
  --white: 255, 255, 255;
  --grey-400: 121, 121, 121;
  --grey-100: 230, 230, 230;
  --grey-50: 237, 237, 237;
  --grey-20: 241, 241, 241;
  --cl-black: rgb(var(--black));
  --cl-white: rgb(var(--white));
  --cl-grey-400: rgb(var(--grey-400));
  --cl-grey-100: rgb(var(--grey-100));
  --cl-grey-50: rgb(var(--grey-50));
  --cl-grey-20: rgb(var(--grey-20));
  --primary-cl: var(--cl-black);
  --secondary-cl: var(--cl-white);
}

:root {
  --ff-poppins: "Poppins", "Helvetica Neue", "Nimbus Sans L", sans-serif;
  --fw-black: 700;
  --fw-bold: 600;
  --fw-normal: 500;
  --fw-light: 400;
  --fw-ultra-light: 300;
  --fz-xl: 100px;
  --fz-lg: 20px;
  --fz-n: 15px;
  --fz-sm: 13px;
  --lh-sm: 1;
  --lh-md: 1.33;
  --lh-lg: 1.75;
}
:root .text--selected {
  position: relative;
  padding: 0 3px;
  font-weight: var(--fw-bold);
}
:root .text--selected::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  background-color: var(--cl-grey-100);
  z-index: -1;
}
:root .text--light {
  color: var(--cl-grey-400);
  font-size: var(--fz-sm);
  font-weight: var(--fw-light);
  line-height: var(--lh-lg);
}

:root {
  --body-bg-cl: var(--secondary-cl);
  --body-cl: var(--primary-cl);
  --body-lh: var(--lh-md);
  --body-ff: var(--ff-poppins);
  --body-fw: var(--fw-normal);
  --body-fz: var(--fz-lg);
}

:root {
  --hero-mint-spec-fz: var(--fz-lg);
  --xl-hero-mint-spec-fz: var(--xl-fz-lg);
  --lg-hero-mint-spec-fz: var(--lg-fz-lg);
  --md-hero-mint-spec-fz: var(--md-fz-lg);
  --sm-hero-mint-spec-fz: var(--sm-fz-lg);
  --hero-bottom-title-fz: var(--fz-2xl);
  --xl-hero-bottom-title-fz: var(--xl-fz-2xl);
  --lg-hero-bottom-title-fz: var(--lg-fz-2xl);
  --md-hero-bottom-title-fz: var(--md-fz-2xl);
  --sm-hero-bottom-title-fz: var(--sm-fz-2xl);
}

:root {
  --button-fw: var(--fw-bold);
  --button-lh: var(--lh-lg);
  --button-border-cl: var(--primary-cl);
  --button-default-bg-cl: var(--secondary-cl);
  --button-active-bg-cl: var(--primary-cl);
  --button-default-cl: var(--primary-cl);
  --button-active-cl: var(--secondary-cl);
}

:root {
  --link-fw: var(--fw-bold);
  --link-lh: var(--lh-lg);
  --link-default-cl: var(--primary-cl);
}

@font-face {
  font-family: "Inter";
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Inter-Black.woff2") format("woff2"), url("../fonts/Inter-Black.woff") format("woff");
}
@font-face {
  font-family: "Roboto";
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Roboto-Black.woff2") format("woff2"), url("../fonts/Roboto-Black.woff") format("woff");
}
html {
  box-sizing: border-box;
}

/* stylelint-disable scss/selector-nest-combinators */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/* stylelint-enable scss/selector-nest-combinators */
body {
  --df-body-fz: var(--body-fz);
  background-color: var(--body-bg-cl);
  color: var(--body-cl);
  font-family: var(--body-ff);
  font-size: var(--df-body-fz);
  font-weight: var(--body-fw);
  line-height: var(--body-lh);
}

.container {
  width: 100%;
  max-width: 1420px;
  margin: 0 auto;
  padding: 0 20px;
}

.button {
  --button-bg-cl: var(--button-default-bg-cl);
  --button-cl: var(--button-default-cl);
  display: inline-flex;
  padding: 15px 20px;
  border: 2px solid var(--button-border-cl);
  border-radius: 20px;
  background-color: var(--button-bg-cl);
  color: var(--button-cl);
  font-weight: var(--button-fw);
  line-height: var(--button-lh);
  align-items: center;
  text-decoration: none;
  cursor: pointer;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  transition: box-shadow 0.3s;
}
.button:active {
  --button-shadow: var(--button-active-shadow);
  --button-bg-cl: var(--button-active-bg-cl);
  --button-cl: var(--button-active-cl);
}
@media (max-width: 590px) {
  .button {
    padding: 12px 38px 11px;
    border: 2px solid var(--button-border-cl);
    border-radius: 12px;
  }
  .button:hover {
    --button-shadow: var(--sm-button-hover-shadow);
  }
  .button:active {
    --button-shadow: var(--sm-button-active-shadow);
  }
}
.button__icon {
  margin-right: 20px;
}

.link {
  --link-cl: var(--link-default-cl);
  color: var(--link-cl);
  font-weight: var(--link-fw);
  line-height: var(--link-lh);
  text-decoration: none;
}
.link:active {
  text-decoration: underline;
}

.icon {
  display: block;
  fill: currentColor;
}

.header {
  display: flex;
  justify-content: space-between;
  padding-top: 70px;
}
.header__language {
  display: flex;
  align-items: center;
}
.header__language-text {
  font-size: var(--fz-sm);
}
.header__language-icons {
  margin-left: 20px;
}
.header__language-icon:not(:last-child) {
  margin-right: 10px;
}

.hero {
  display: grid;
  grid-template-columns: 7fr 5fr;
  height: 100%;
  padding: 90px 0 100px;
}
.hero__message-top {
  display: grid;
  gap: 40px;
}
.hero__text {
  font-weight: var(--fw-ultra-light);
  line-height: var(--lh-lg);
}
.hero__message-social {
  display: flex;
  align-items: center;
}
.hero__message-social-link {
  margin-left: 40px;
}
.hero__message-bottom {
  margin-top: 85px;
}
.hero__bottom-disclaimer {
  margin-top: 10px;
}
.hero__title {
  --df-hero-title-fz: var(--fz-xl);
  font-size: var(--df-hero-title-fz);
}
.hero__image {
  position: relative;
}
.hero__image-img {
  position: absolute;
  bottom: -99px;
  left: -20px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
