/*
	Create CSS custom properties from color map.

	EXAMPLE:
	$cl: (
		blue-10: #1D253B,
	);
	@include get-cls($cl);

	RESULT:
	--blue-10: 29, 37, 59;
	--cl-blue-10: rgb(var(--blue-10));

	INFO: One '@each' expression were split into two to achieve
	more readability of custom properties in a dev tools.
*/
/*
	Create RGBA custom property from given color.

	EXAMPLE:
	$ca-blue-10 {
		10: .5,
		20: .3,
		30: .1,
	}
	@include get-alphas($cl, 'blue-10', $ca-blue-10)

	RESULT:
	--ca-blue-10-10: rgba(var(--blue-10), .5)
	--ca-blue-10-20: rgba(var(--blue-10), .3)
	--ca-blue-10-30: rgba(var(--blue-10), .1)
*/
:root {
  --black: 0, 0, 0;
  --white: 255, 255, 255;
  --grey-400: 121, 121, 121;
  --grey-100: 230, 230, 230;
  --grey-70: 231, 231, 231;
  --grey-50: 237, 237, 237;
  --grey-20: 241, 241, 241;
  --cl-black: rgb(var(--black));
  --cl-white: rgb(var(--white));
  --cl-grey-400: rgb(var(--grey-400));
  --cl-grey-100: rgb(var(--grey-100));
  --cl-grey-70: rgb(var(--grey-70));
  --cl-grey-50: rgb(var(--grey-50));
  --cl-grey-20: rgb(var(--grey-20));
  --primary-cl: var(--cl-black);
  --secondary-cl: var(--cl-white);
}

:root {
  --ff-poppins: "Poppins", "Helvetica Neue", "Nimbus Sans L", sans-serif;
  --fw-black: 700;
  --fw-bold: 600;
  --fw-normal: 500;
  --fw-light: 400;
  --fw-ultra-light: 300;
  --fz-xl: 100px;
  --fz-lg: 20px;
  --fz-n: 15px;
  --fz-sm: 13px;
  --sm-fz-xl: 50px;
  --sm-fz-lg: 15px;
  --lh-sm: 1;
  --lh-md: 1.33;
  --lh-lg: 1.75;
}
:root .text--xl {
  font-size: var(--sm-fz-xl);
}
@media (min-width: 590px) {
  :root .text--xl {
    font-size: var(--fz-xl);
  }
}
:root .text--lg {
  font-size: var(--sm-fz-lg);
}
@media (min-width: 590px) {
  :root .text--lg {
    font-size: var(--fz-lg);
  }
}
:root .text--sm {
  font-size: var(--fz-sm);
  line-height: var(--lh-lg);
}
:root .text--selected {
  position: relative;
  padding: 0 3px;
  font-weight: var(--fw-bold);
}
:root .text--selected::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  background-color: var(--cl-grey-100);
  z-index: -1;
}
:root .text--light {
  color: var(--cl-grey-400);
  font-weight: var(--fw-light);
}

:root {
  --body-bg-cl: var(--secondary-cl);
  --body-cl: var(--primary-cl);
  --body-lh: var(--lh-md);
  --body-ff: var(--ff-poppins);
  --body-fw: var(--fw-normal);
  --body-fz: var(--fz-n);
}

:root {
  --button-fw: var(--fw-bold);
  --button-lh: var(--lh-lg);
  --button-border-cl: var(--primary-cl);
  --button-default-bg-cl: var(--secondary-cl);
  --button-active-bg-cl: var(--primary-cl);
  --button-default-cl: var(--primary-cl);
  --button-active-cl: var(--secondary-cl);
}

:root {
  --link-fw: var(--fw-bold);
  --link-lh: var(--lh-lg);
  --link-default-cl: var(--primary-cl);
}

@font-face {
  font-family: "Inter";
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Inter-Black.woff2") format("woff2"), url("../fonts/Inter-Black.woff") format("woff");
}
@font-face {
  font-family: "Roboto";
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Roboto-Black.woff2") format("woff2"), url("../fonts/Roboto-Black.woff") format("woff");
}
html {
  box-sizing: border-box;
}

/* stylelint-disable scss/selector-nest-combinators */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/* stylelint-enable scss/selector-nest-combinators */
body {
  --df-body-fz: var(--body-fz);
  position: relative;
  background-color: var(--body-bg-cl);
  color: var(--body-cl);
  font-family: var(--body-ff);
  font-size: var(--df-body-fz);
  font-weight: var(--body-fw);
  line-height: var(--body-lh);
}
body h1::selection, body p::selection, body span::selection {
  background: var(--cl-grey-400);
  color: var(--cl-white);
}

.container {
  width: 100%;
  max-width: 1420px;
  margin: 0 auto;
  padding: 0 20px;
}

.button {
  --button-bg-cl: var(--button-default-bg-cl);
  --button-cl: var(--button-default-cl);
  display: inline-flex;
  padding: 15px 20px;
  border: 2px solid var(--button-border-cl);
  border-radius: 20px;
  background-color: var(--button-bg-cl);
  color: var(--button-cl);
  font-weight: var(--button-fw);
  line-height: var(--button-lh);
  align-items: center;
  text-decoration: none;
  cursor: pointer;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  transition: all 0.15s ease;
}
.button:hover {
  --button-cl: var(--cl-grey-400);
  border: 2px solid var(--cl-grey-400);
}
.button__icon {
  margin-right: 20px;
}

.link {
  --link-cl: var(--link-default-cl);
  color: var(--link-cl);
  font-weight: var(--link-fw);
  line-height: var(--link-lh);
  text-decoration: none;
  cursor: pointer;
  transition: all 0.15s ease;
}
.link:hover {
  text-decoration: underline;
}

.icon {
  display: block;
  fill: currentColor;
}

.header {
  padding: 0 40px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  padding-top: 30px;
}
@media (min-width: 590px) {
  .header__inner {
    display: 70px;
  }
}
.header__language {
  display: flex;
  align-items: center;
}
.header__language-text {
  font-size: var(--fz-sm);
}
@media (max-width: 590px) {
  .header__language-text {
    display: none;
  }
}
.header__language-icons {
  margin-left: 20px;
}
.header__language-icon:not(:last-child) {
  margin-right: 10px;
}

@supports (overflow: hidden) {
  .hero {
    overflow: hidden;
  }
}
@supports (overflow: clip) {
  .hero {
    overflow: clip;
  }
}
@media (min-width: 1200px) {
  .hero {
    min-height: 100vh;
  }
}
@media (min-width: 1200px) {
  .hero__main {
    height: 90vh;
    display: flex;
    align-items: center;
  }
}
.hero__inner {
  display: grid;
  padding-top: 30px;
}
@media (min-width: 1200px) {
  .hero__inner {
    grid-template-columns: 7fr 5fr;
    padding-top: 19vh;
  }
}
.hero__message-top {
  display: grid;
  gap: 30px;
}
@media (min-width: 1200px) {
  .hero__message-top {
    gap: 40px;
  }
}
.hero__text {
  font-weight: var(--fw-ultra-light);
  line-height: var(--lh-lg);
}
@media (max-width: 800px) {
  .hero__text {
    line-height: 30px;
  }
}
.hero__message-social {
  display: flex;
  flex-direction: column;
  align-items: start;
}
@media (min-width: 590px) {
  .hero__message-social {
    align-items: center;
    flex-direction: row;
  }
}
@media (min-width: 590px) {
  .hero__message-social-link {
    margin-left: 40px;
  }
}
@media (max-width: 590px) {
  .hero__message-social-link {
    margin-top: 20px;
  }
}
.hero__message-bottom {
  margin-top: 30px;
}
@media (min-width: 1200px) {
  .hero__message-bottom {
    margin-top: 85px;
  }
}
@media (max-width: 800px) {
  .hero__bottom-text {
    line-height: 30px;
  }
}
.hero__bottom-disclaimer {
  margin-top: 10px;
}
@media (max-width: 800px) {
  .hero__bottom-disclaimer {
    line-height: 20px;
  }
}
.hero__image-picture {
  position: relative;
  width: 100%;
  height: auto;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.hero__image {
  position: relative;
}
@media (min-width: 1200px) {
  .hero__image::before {
    content: "";
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 200px;
    background-image: linear-gradient(0deg, var(--cl-white) 8%, rgba(253, 187, 45, 0) 100%);
    z-index: 1;
  }
}
.hero__image img {
  display: block;
}
@media (min-width: 1200px) {
  .hero__image img {
    margin-top: -32px;
  }
}
@media (max-width: 1200px) {
  .hero__image img {
    width: 100%;
    height: auto;
  }
}
.hero__image-img {
  -o-object-fit: cover;
  object-fit: cover;
}
@media (max-width: 1200px) {
  .hero__image-img {
    max-width: 508px;
  }
}
@media (min-width: 1200px) {
  .hero__image-img {
    margin-right: -134px;
  }
}
.hero__image-circles {
  position: absolute;
  top: 192px;
  right: -30%;
  height: 100%;
}
@media (min-width: 1200px) {
  .hero__image-circles {
    top: -100px;
    right: -92%;
  }
}
.hero__image-circle {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--cl-grey-50);
  z-index: -1;
  width: 400px;
  height: 400px;
  background-color: var(--cl-grey-20);
  border-radius: 50%;
}
@media (min-width: 1200px) {
  .hero__image-circle {
    width: 750px;
    height: 750px;
  }
}
.hero__image-circle::before {
  content: "";
  position: absolute;
  width: 620px;
  height: 620px;
  background-image: url("../img/dash-circle.svg");
  background-size: contain;
  -webkit-animation: rotateUnderClock 20s cubic-bezier(0.4, 0.2, 0.2, 1) infinite;
  animation: rotateUnderClock 20s cubic-bezier(0.4, 0.2, 0.2, 1) infinite;
}
@media (min-width: 1200px) {
  .hero__image-circle::before {
    width: 1020px;
    height: 1020px;
  }
}
.hero__image-circle::after {
  content: "";
  position: absolute;
  width: 800px;
  height: 800px;
  background-image: url("../img/dash-circle.svg");
  background-size: contain;
  -webkit-animation: rotateClock 30s cubic-bezier(0.8, 0.8, 0.2, 1) infinite;
  animation: rotateClock 30s cubic-bezier(0.8, 0.8, 0.2, 1) infinite;
}
@media (min-width: 1200px) {
  .hero__image-circle::after {
    width: 1500px;
    height: 1500px;
  }
}
@-webkit-keyframes rotateClock {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes rotateClock {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-webkit-keyframes rotateUnderClock {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
  }
}
@keyframes rotateUnderClock {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
